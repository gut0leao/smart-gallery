#!/bin/bash

## Description: Script para automatizar a configuração inicial do WordPress
## Usage: ddev setup-wordpress
## Example: ddev setup-wordpress

set -e

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}🚀 WordPress Setup Script${NC}"
echo ""

# Verificar se WordPress já está instalado
echo "🔍 Verificando instalação existente..."
if ddev wp core is-installed 2>/dev/null; then
    echo -e "${YELLOW}⚠️  WORDPRESS JÁ ESTÁ INSTALADO!${NC}"
    echo ""
    echo -e "${RED}🚨 ATENÇÃO: Este script fará uma instalação COMPLETA do zero:${NC}"
    echo "   • Todos os dados do WordPress serão PERDIDOS"
    echo "   • Banco de dados será RECRIADO"
    echo "   • Posts, páginas, usuários, configurações serão APAGADOS"
    echo "   • Arquivos de configuração serão SOBRESCRITOS"
    echo ""
    echo -e "${BLUE}💡 Se você quer apenas atualizar plugins/temas sem perder dados, cancele e:"
    echo "   • Use comandos individuais: ddev wp plugin install [plugin]"
    echo "   • Ou use o wp-admin para instalações manuais${NC}"
    echo ""
    echo -e "${RED}⚠️  Esta ação é IRREVERSÍVEL!${NC}"
    echo ""
    
    read -p "Tem certeza que quer REINSTALAR WordPress do zero? (y/N): " -n 1 -r
    echo ""
    
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${GREEN}😌 Cancelado. Sua instalação WordPress permanece intacta.${NC}"
        exit 0
    fi
    
    echo -e "${RED}🔥 Prosseguindo com reinstalação completa...${NC}"
    echo ""
else
    echo -e "${GREEN}✅ Nenhuma instalação WordPress detectada. Prosseguindo com instalação limpa...${NC}"
    echo ""
fi

echo "🔐 Configurando HTTPS com mkcert..."

# Verificar se está rodando no WSL
if [[ -f /proc/version ]] && grep -q Microsoft /proc/version; then
    echo "🐧 Detectado WSL (Windows Subsystem for Linux)"
    echo "📝 Instruções para WSL:"
    echo "   1. Instale mkcert no WSL: sudo apt install mkcert"
    echo "   2. Instale mkcert no Windows também (via Chocolatey ou GitHub)"
    echo "   3. Execute mkcert -install no WSL E no Windows"
    echo "   4. Certifique-se de que o navegador está rodando no Windows"
    echo ""
fi

# Verificar se mkcert está instalado
if ! command -v mkcert &> /dev/null; then
    echo "❌ mkcert não está instalado."
    if [[ -f /proc/version ]] && grep -q Microsoft /proc/version; then
        echo "   Para WSL, instale com: sudo apt update && sudo apt install mkcert"
        echo "   Também instale no Windows: https://github.com/FiloSottile/mkcert"
    else
        echo "   Instale primeiro com: apt install mkcert ou brew install mkcert"
    fi
    exit 1
fi

# Instalar a CA local do mkcert se ainda não estiver instalada
echo "🔑 Instalando autoridade certificadora local..."
if [[ -f /proc/version ]] && grep -q Microsoft /proc/version; then
    echo "⚠️  WSL detectado: Após este comando, execute também 'mkcert -install' no Windows!"
fi
mkcert -install 2>/dev/null || true

echo "🔄 Reiniciando DDEV para aplicar certificados SSL..."
ddev restart

echo "📥 Baixando arquivos do WordPress..."
ddev wp core download --force

echo "🛠️  Instalando WordPress..."
ddev wp core install --url="https://smart-gallery-filter.ddev.site" --title="Smart Gallery Filter" --admin_user="admin" --admin_password="admin" --admin_email="admin@local.test"

echo "🔒 Configurando WordPress para usar HTTPS..."
ddev wp option update home "https://smart-gallery-filter.ddev.site"
ddev wp option update siteurl "https://smart-gallery-filter.ddev.site"

echo "🔌 Verificando plugin smart-gallery-filter..."
if ddev wp plugin is-installed smart-gallery-filter 2>/dev/null; then
    ddev wp plugin activate smart-gallery-filter
    echo "   ✅ Plugin smart-gallery-filter ativado"
else
    echo -e "   ${YELLOW}⚠️  Plugin smart-gallery-filter não encontrado no diretório wp-content/plugins/${NC}"
    echo "   ℹ️  Certifique-se de que o plugin está no local correto"
fi

echo "🔌🗑️  Removendo plugins desnecessários..."
# Tentar remover plugins padrão se existirem
if ddev wp plugin is-installed akismet 2>/dev/null; then
    ddev wp plugin uninstall akismet
    echo "   ✅ Akismet removido"
else
    echo "   ℹ️  Akismet não encontrado"
fi

if ddev wp plugin is-installed hello 2>/dev/null; then
    ddev wp plugin uninstall hello
    echo "   ✅ Hello Dolly removido" 
else
    echo "   ℹ️  Hello Dolly não encontrado"
fi

echo "🔌📥 Instalando e ativando plugins: elementor, pods"
ddev wp plugin install elementor pods --activate

echo "🎨📥 Instalando e ativando tema hello-biz"
ddev wp theme install hello-biz --activate

echo ""
echo -e "${GREEN}🎉 Configuração WordPress concluída com sucesso!${NC}"
echo ""
echo -e "${BLUE}📋 Informações de acesso:${NC}"
echo "🔗 Site: https://smart-gallery-filter.ddev.site"
echo "👤 Admin: admin / admin"
echo "📧 Email: admin@local.test"
echo ""
echo -e "${YELLOW}🔄 Próximos passos sugeridos:${NC}"
echo "   1. Acesse o wp-admin e configure o Elementor"
echo "   2. Execute './demo-data/pods-import.sh' para importar dados de teste"
echo "   3. Verifique se todos os plugins estão funcionando"
echo ""

ddev describe
