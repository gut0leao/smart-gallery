# Fixed authentication order: auth@v2 before setup-gcloud@v2  
name: 🧹 Cleanup GCP Resources

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'GCP Project ID to clean'
        required: true
        type: string
      force_cleanup:
        description: 'Force cleanup without confirmation'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Dry run mode (show what would be deleted)'
        required: false
        default: true
        type: boolean

env:
  GCP_PROJECT_ID: ${{ github.event.inputs.project_id }}

jobs:
  cleanup:
    name: 🧹 Clean GCP Resources
    runs-on: ubuntu-latest
    
    steps:
      # Checkout for cleanup script
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      # Authenticate to GCP
      - name: 🔐 Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Setup Google Cloud SDK  
      - name: ☁️ Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      # Prepare credentials for cleanup script
      - name: 🔧 Prepare Cleanup Environment
        run: |
          # Create credentials directory and file
          mkdir -p .credentials
          echo '${{ secrets.GCP_SA_KEY }}' > .credentials/service-account.json
          
          # Make cleanup script executable
          chmod +x scripts/gcp-cleanup.sh

      # Run cleanup with appropriate mode
      - name: 🧹 Execute GCP Cleanup
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run }}
          FORCE: ${{ github.event.inputs.force_cleanup }}
        run: |
          echo "🧹 Starting GCP resource cleanup..."
          echo "Project: ${{ env.GCP_PROJECT_ID }}"
          echo "Dry Run: ${{ github.event.inputs.dry_run }}"
          echo "Force: ${{ github.event.inputs.force_cleanup }}"
          
          # Execute cleanup script
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "🔍 DRY RUN MODE - No resources will be deleted"
            (echo "${{ env.GCP_PROJECT_ID }}"; echo "y") | DRY_RUN=true ./scripts/gcp-cleanup.sh
          else
            echo "⚠️ REAL CLEANUP MODE - Resources will be DELETED!"
            if [ "${{ github.event.inputs.force_cleanup }}" = "true" ]; then
              (echo "${{ env.GCP_PROJECT_ID }}"; echo "y"; echo "y") | DRY_RUN=false FORCE=true ./scripts/gcp-cleanup.sh
            else
              echo "❌ Real cleanup requires force_cleanup=true for safety"
              exit 1
            fi
          fi

      # Cleanup sensitive files
      - name: 🗑️ Cleanup Sensitive Files
        if: always()
        run: |
          rm -rf .credentials/
          echo "✅ Cleanup completed"

      # Summary
      - name: 📊 Cleanup Summary
        if: success()
        run: |
          echo "## 🧹 GCP Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: ${{ env.GCP_PROJECT_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: ${{ github.event.inputs.dry_run == 'true' && 'Dry Run' || 'Real Cleanup' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Completed Successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY